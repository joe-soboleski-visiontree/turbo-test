name: 'Setup pnpm and install'
description: 'This action checks out the commit, sets up node and installs deps using pnpm'
inputs:
  dot-npmrc:
    required: true
    description: 'Dot npmrc file for node environment'

runs:
  using: 'composite'
  steps:
    - name: Add package auth
      shell: bash
      run: echo ${{ inputs.dot-npmrc }} >> .npmrc

    - name: Setup node
      uses: actions/setup-node@v3
      with:
        node-version: 16

    - name: Setup pnpm
      uses: pnpm/action-setup@v2
      with:
        version: 7
        run_install: false

    - name: Get pnpm store directory
      id: pnpm-cache
      shell: bash
      run: |
        echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT

    - uses: actions/cache@v3
      name: Setup pnpm cache
      with:
        path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
        key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
        restore-keys: |
          ${{ runner.os }}-pnpm-store-

    - name: Setup Turbo cache
      uses: actions/cache@v3
      with:
        path: '**/.turbo'
        key: ${{ runner.os }}-turbo-${{ hashFiles('**/pnpm-lock.yaml') }}
        restore-keys: |
          ${{ runner.os }}-turbo-

    - name: Install dependencies
      shell: bash
      run: pnpm install --no-frozen-lockfile

    - name: Get installed Playwright version
      id: playwright-version
      shell: bash
      run: echo "PLAYWRIGHT_VERSION=$(pnpm -C apps/live-preview exec playwright -V | sed 's/Version //')" >> $GITHUB_ENV

    - name: Load cached Playwright browsers
      id: playwright-cache
      uses: actions/cache@v3
      with:
        path: ~/.cache/ms-playwright
        key: ${{ runner.os }}-playwright-${{ env.PLAYWRIGHT_VERSION }}

    - name: Install Playwright browsers
      if: steps.playwright-cache.outputs.cache-hit != 'true'
      shell: bash
      run: pnpm dlx playwright install --with-deps
